extends 'res://addons/gut/test.gd'
# ------------------------------------------------------------------------------
# These tests are used to test the output generated by parameterized
# tests.  These are only for visually verifying output formatting.
# ------------------------------------------------------------------------------
var _old_indent_string = ''

func before_all():
	_old_indent_string = gut.get_logger().get_indent_string()
	gut.get_logger().set_indent_string('--->')

func after_all():
	gut.get_logger().set_indent_string(_old_indent_string)

func test_no_parameters():
	assert_true(true, 'this passes')

func test_multiple_passing_no_params():
	assert_true(true, 'passing test one')
	gut.p('something')
	assert_false(false, 'passing test two')

func test_multiple_failing_no_params():
	assert_false(true, 'failing test one')
	assert_true(false, 'failing test two')

func test_basic_array(p=use_parameters([1, 2, 1, 4])):
	assert_eq(p, 1, 'output test may fail')

func test_all_passing(p=use_parameters([[1, 2], [3, 4], [5, 6]])):
	assert_eq(p[0], p[1 -1], 'output test, should all pass.')

func test_show_error():
	_lgr.error('Something bad happened')
	assert_false(false)

func test_show_warning():
	_lgr.warn('Something kinda bad happened')
	assert_true(true)

func test_show_info():
	_lgr.info('Something happened')
	assert_true(true)


class TestBasicLoggerOutput:
	extends 'res://test/gut_test.gd'

	var _test_logger = null
	func before_each():
		_test_logger = _utils.Logger.new()
		_test_logger.set_gut(gut)
		_test_logger.set_indent_string('|...')
		_test_logger._skip_test_name_for_testing = true

	func test_indent_levels():
		_test_logger.log('0 indent')
		_test_logger.inc_indent()
		_test_logger.log('1 indent')
		_test_logger.inc_indent()
		_test_logger.inc_indent()
		_test_logger.log('3 indents')
		_test_logger.set_indent_level(1)
		_test_logger.log('1 indent')
		_test_logger.set_indent_level(10)
		_test_logger.log('10 indents')
		assert_true(true)

	func test_indent_with_new_lines():
		_test_logger.set_indent_level(2)
		_test_logger.log("hello\nthis\nshould\nline up")
		assert_true(true)

class TestLogLevels:
	extends 'res://addons/gut/test.gd' # this was on purpose

	var _orig_log_level = -1
	var _orig_indent_string = null

	func before_all():
		_orig_log_level = gut.get_log_level()
		_orig_indent_string = gut.get_logger().get_indent_string()
		gut.get_logger().set_indent_string('--->')

	func after_all():
		gut.set_log_level(_orig_log_level)
		gut.get_logger().set_indent_string(_orig_indent_string)

	func test_log_types_at_levels_with_passing_test(level=use_parameters([-2, -1, 0, 1, 2, 3])):
		gut.set_log_level(level)
		gut.get_logger().warn('test text')
		gut.get_logger().error('test text')
		gut.get_logger().info('test text')
		gut.get_logger().debug('test text')
		assert_true(true, 'this should pass')

	func test_log_types_at_levels_with_failing_test(level=use_parameters([-2, -1, 0, 1, 2, 3])):
		gut.set_log_level(level)
		gut.get_logger().warn('test text')
		gut.get_logger().error('test text')
		gut.get_logger().info('test text')
		gut.get_logger().debug('test text')
		assert_true(false, 'this should fail')
