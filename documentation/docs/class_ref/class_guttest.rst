:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from GUT Plugin sources.
.. Generator: documentation/godot_make_rst.py.
.. _class_GutTest:

GutTest
=======

**Inherits:** `Node <https://docs.godotengine.org/en/stable/classes/class_node.html>`_

This is the base class for all test scripts.  Extend this...test the world!

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +--------------------------------------------------------------------------------+------------------------------------------------------------------+---------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`ParameterFactory<class_GutTest_property_ParameterFactory>` | ``<unknown>`` |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------+---------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`InputFactory<class_GutTest_property_InputFactory>`         | ``<unknown>`` |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------+---------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`InputSender<class_GutTest_property_InputSender>`           | ``<unknown>`` |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------+---------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`add_child_autofree<class_GutTest_method_add_child_autofree>`\ (\ node, legible_unique_name = false\ )                                                                                                                                                      |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`add_child_autoqfree<class_GutTest_method_add_child_autoqfree>`\ (\ node, legible_unique_name = false\ )                                                                                                                                                    |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_almost_eq<class_GutTest_method_assert_almost_eq>`\ (\ got, expected, error_interval, text = ""\ )                                                                                                                                                   |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_almost_ne<class_GutTest_method_assert_almost_ne>`\ (\ got, not_expected, error_interval, text = ""\ )                                                                                                                                               |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_between<class_GutTest_method_assert_between>`\ (\ got, expect_low, expect_high, text = ""\ )                                                                                                                                                        |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_called<class_GutTest_method_assert_called>`\ (\ inst, method_name = null, parameters = null\ )                                                                                                                                                      |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_called_count<class_GutTest_method_assert_called_count>`\ (\ callable\: `Callable <https://docs.godotengine.org/en/stable/classes/class_callable.html>`_, expected_count\: `int <https://docs.godotengine.org/en/stable/classes/class_int.html>`_\ ) |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_does_not_have<class_GutTest_method_assert_does_not_have>`\ (\ obj, element, text = ""\ )                                                                                                                                                            |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_eq<class_GutTest_method_assert_eq>`\ (\ got, expected, text = ""\ )                                                                                                                                                                                 |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_eq_deep<class_GutTest_method_assert_eq_deep>`\ (\ v1, v2\ )                                                                                                                                                                                         |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_false<class_GutTest_method_assert_false>`\ (\ got, text = ""\ )                                                                                                                                                                                     |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_gt<class_GutTest_method_assert_gt>`\ (\ got, expected, text = ""\ )                                                                                                                                                                                 |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_gte<class_GutTest_method_assert_gte>`\ (\ got, expected, text = ""\ )                                                                                                                                                                               |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_has<class_GutTest_method_assert_has>`\ (\ obj, element, text = ""\ )                                                                                                                                                                                |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_lte<class_GutTest_method_assert_lte>`\ (\ got, expected, text = ""\ )                                                                                                                                                                               |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_ne<class_GutTest_method_assert_ne>`\ (\ got, not_expected, text = ""\ )                                                                                                                                                                             |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_ne_deep<class_GutTest_method_assert_ne_deep>`\ (\ v1, v2\ )                                                                                                                                                                                         |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_not_between<class_GutTest_method_assert_not_between>`\ (\ got, expect_low, expect_high, text = ""\ )                                                                                                                                                |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_not_called<class_GutTest_method_assert_not_called>`\ (\ inst, method_name = null, parameters = null\ )                                                                                                                                              |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_not_null<class_GutTest_method_assert_not_null>`\ (\ got, text = ""\ )                                                                                                                                                                               |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_not_same<class_GutTest_method_assert_not_same>`\ (\ v1, v2, text = ""\ )                                                                                                                                                                            |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_null<class_GutTest_method_assert_null>`\ (\ got, text = ""\ )                                                                                                                                                                                       |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_same<class_GutTest_method_assert_same>`\ (\ v1, v2, text = ""\ )                                                                                                                                                                                    |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_string_contains<class_GutTest_method_assert_string_contains>`\ (\ text, search, match_case = true\ )                                                                                                                                                |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`assert_true<class_GutTest_method_assert_true>`\ (\ got, text = ""\ )                                                                                                                                                                                       |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`autofree<class_GutTest_method_autofree>`\ (\ thing\ )                                                                                                                                                                                                      |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`autoqfree<class_GutTest_method_autoqfree>`\ (\ thing\ )                                                                                                                                                                                                    |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`compare_deep<class_GutTest_method_compare_deep>`\ (\ v1, v2, max_differences = null\ )                                                                                                                                                                     |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`did_wait_timeout<class_GutTest_method_did_wait_timeout>`\ (\ )                                                                                                                                                                                             |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`fail_test<class_GutTest_method_fail_test>`\ (\ text\ )                                                                                                                                                                                                     |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`get_call_count<class_GutTest_method_get_call_count>`\ (\ object, method_name = null, parameters = null\ )                                                                                                                                                  |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`get_call_parameters<class_GutTest_method_get_call_parameters>`\ (\ object, method_name_or_index = -1, idx = -1\ )                                                                                                                                          |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`is_failing<class_GutTest_method_is_failing>`\ (\ )                                                                                                                                                                                                         |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`is_passing<class_GutTest_method_is_passing>`\ (\ )                                                                                                                                                                                                         |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`pass_test<class_GutTest_method_pass_test>`\ (\ text\ )                                                                                                                                                                                                     |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`pending<class_GutTest_method_pending>`\ (\ text = ""\ )                                                                                                                                                                                                    |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`register_inner_classes<class_GutTest_method_register_inner_classes>`\ (\ base_script\ )                                                                                                                                                                    |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                                         | :ref:`simulate<class_GutTest_method_simulate>`\ (\ obj, times, delta, check_is_processing\: `bool <https://docs.godotengine.org/en/stable/classes/class_bool.html>`_ = false\ )                                                                                  |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`skip_if_godot_version_lt<class_GutTest_method_skip_if_godot_version_lt>`\ (\ expected\ )                                                                                                                                                                   |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`skip_if_godot_version_ne<class_GutTest_method_skip_if_godot_version_ne>`\ (\ expected\ )                                                                                                                                                                   |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`stub<class_GutTest_method_stub>`\ (\ thing, p2 = null, p3 = null\ )                                                                                                                                                                                        |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`use_parameters<class_GutTest_method_use_parameters>`\ (\ params\ )                                                                                                                                                                                         |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`wait_for_signal<class_GutTest_method_wait_for_signal>`\ (\ sig\: `Signal <https://docs.godotengine.org/en/stable/classes/class_signal.html>`_, max_wait, msg = ""\ )                                                                                       |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`wait_frames<class_GutTest_method_wait_frames>`\ (\ frames, msg = ""\ )                                                                                                                                                                                     |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`wait_seconds<class_GutTest_method_wait_seconds>`\ (\ time, msg = ""\ )                                                                                                                                                                                     |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`wait_until<class_GutTest_method_wait_until>`\ (\ callable, max_wait, p3 = "", p4 = ""\ )                                                                                                                                                                   |
   +--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. table::
   :widths: auto

   +--------------+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------+
   | Internal Use | |void|                                                                         | :ref:`clear_signal_watcher<class_GutTest_method_clear_signal_watcher>`\ (\ )                         |
   +--------------+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------+
   | Internal Use | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`double_singleton<class_GutTest_method_double_singleton>`\ (\ singleton_name\ )                 |
   +--------------+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------+
   | Internal Use | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`get_logger<class_GutTest_method_get_logger>`\ (\ )                                             |
   +--------------+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------+
   | Internal Use | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`get_summary<class_GutTest_method_get_summary>`\ (\ )                                           |
   +--------------+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------+
   | Internal Use | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`get_summary_text<class_GutTest_method_get_summary_text>`\ (\ )                                 |
   +--------------+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------+
   | Internal Use | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`partial_double_singleton<class_GutTest_method_partial_double_singleton>`\ (\ singleton_name\ ) |
   +--------------+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------+
   | Internal Use | `Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ | :ref:`run_x_times<class_GutTest_method_run_x_times>`\ (\ x\ )                                        |
   +--------------+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------+
   | Internal Use | |void|                                                                         | :ref:`set_logger<class_GutTest_method_set_logger>`\ (\ logger\ )                                     |
   +--------------+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_GutTest_property_ParameterFactory:

.. rst-class:: classref-property

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **ParameterFactory** = ``<unknown>`` :ref:`🔗<class_GutTest_property_ParameterFactory>`

Reference to :ref:`addons/gut/parameter_factory.gd<class_addons/gut/parameter_factory.gd>` script.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_property_InputFactory:

.. rst-class:: classref-property

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **InputFactory** = ``<unknown>`` :ref:`🔗<class_GutTest_property_InputFactory>`

Reference to :ref:`addons/gut/input_factory.gd<class_addons/gut/input_factory.gd>` script.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_property_InputSender:

.. rst-class:: classref-property

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **InputSender** = ``<unknown>`` :ref:`🔗<class_GutTest_property_InputSender>`

Reference to :ref:`GutInputSender<class_GutInputSender>`.  This was the way you got to the :ref:`GutInputSender<class_GutInputSender>` before it was given a ``class_name``

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_GutTest_method_get_logger:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **get_logger**\ (\ ) :ref:`🔗<class_GutTest_method_get_logger>`

**Internal use only.**

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_set_logger:

.. rst-class:: classref-method

|void| **set_logger**\ (\ logger\ ) :ref:`🔗<class_GutTest_method_set_logger>`

**Internal use only.**

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_eq:

.. rst-class:: classref-method

|void| **assert_eq**\ (\ got, expected, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_eq>`

Asserts that the expected value equals the value got. assert got == expected and prints optional text.  See `Comparing-Things <../Comparing-Things.html>`__ for information about comparing dictionaries and arrays. 

See also: :ref:`assert_ne<class_GutTest_method_assert_ne>`, :ref:`assert_same<class_GutTest_method_assert_same>`, :ref:`assert_not_same<class_GutTest_method_assert_not_same>`\ 

::

       var one = 1
       var node1 = Node.new()
       var node2 = node1
    
       # Passing
       assert_eq(one, 1, 'one should equal one')
       assert_eq('racecar', 'racecar')
       assert_eq(node2, node1)
       assert_eq([1, 2, 3], [1, 2, 3])
       var d1_pass = {'a':1}
       var d2_pass = d1_pass
       assert_eq(d1_pass, d2_pass)
    
       # Failing
       assert_eq(1, 2) # FAIL
       assert_eq('hello', 'world')
       assert_eq(self, node1)
       assert_eq([1, 'two', 3], [1, 2, 3, 4])
       assert_eq({'a':1}, {'a':1})

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_ne:

.. rst-class:: classref-method

|void| **assert_ne**\ (\ got, not_expected, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_ne>`

asserts got != expected and prints optional text.  See `Comparing-Things <../Comparing-Things.html>`__ for information about comparing dictionaries and arrays. 

See also: :ref:`assert_eq<class_GutTest_method_assert_eq>`, :ref:`assert_same<class_GutTest_method_assert_same>`, :ref:`assert_not_same<class_GutTest_method_assert_not_same>`\ 

::

       var two = 2
       var node1 = Node.new()
    
       # Passing
       assert_ne(two, 1, 'Two should not equal one.')
       assert_ne('hello', 'world')
       assert_ne(self, node1)
    
       # Failing
       assert_ne(two, 2)
       assert_ne('one', 'one')
       assert_ne('2', 2)

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_almost_eq:

.. rst-class:: classref-method

|void| **assert_almost_eq**\ (\ got, expected, error_interval, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_almost_eq>`

Asserts that `got` is within the range of `expected` +/- `error_interval`. The upper and lower bounds are included in the check.  Verified to work with integers, floats, and Vector2.  Should work with anything that can be added/subtracted. 

::

       # Passing
       assert_almost_eq(0, 1, 1, '0 within range of 1 +/- 1')
       assert_almost_eq(2, 1, 1, '2 within range of 1 +/- 1')
       assert_almost_eq(1.2, 1.0, .5, '1.2 within range of 1 +/- .5')
       assert_almost_eq(.5, 1.0, .5, '.5 within range of 1 +/- .5')
       assert_almost_eq(Vector2(.5, 1.5), Vector2(1.0, 1.0), Vector2(.5, .5))
       assert_almost_eq(Vector2(.5, 1.5), Vector2(1.0, 1.0), Vector2(.25, .25))
    
       # Failing
       assert_almost_eq(1, 3, 1, '1 outside range of 3 +/- 1')
       assert_almost_eq(2.6, 3.0, .2, '2.6 outside range of 3 +/- .2')

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_almost_ne:

.. rst-class:: classref-method

|void| **assert_almost_ne**\ (\ got, not_expected, error_interval, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_almost_ne>`

This is the inverse of `assert_almost_eq`.  This will pass if `got` is outside the range of `expected` +/- `error_interval`.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_gt:

.. rst-class:: classref-method

|void| **assert_gt**\ (\ got, expected, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_gt>`

assserts got > expected

::

       var bigger = 5
       var smaller = 0
    
       # Passing
       assert_gt(bigger, smaller, 'Bigger should be greater than smaller')
       assert_gt('b', 'a')
       assert_gt('a', 'A')
       assert_gt(1.1, 1)
    
       # Failing
       assert_gt('a', 'a')
       assert_gt(1.0, 1)
       assert_gt(smaller, bigger)

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_gte:

.. rst-class:: classref-method

|void| **assert_gte**\ (\ got, expected, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_gte>`

Asserts got is greater than or equal to expected.

::

       var bigger = 5
       var smaller = 0
    
       # Passing
       assert_gte(bigger, smaller, 'Bigger should be greater than or equal to smaller')
       assert_gte('b', 'a')
       assert_gte('a', 'A')
       assert_gte(1.1, 1)
       assert_gte('a', 'a')
    
       # Failing
       assert_gte(0.9, 1.0)
       assert_gte(smaller, bigger)

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_lte:

.. rst-class:: classref-method

|void| **assert_lte**\ (\ got, expected, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_lte>`

Asserts got is less than or equal to expected

::

       var bigger = 5
       var smaller = 0
    
       # Passing
       assert_lt(smaller, bigger, 'Smaller should be less than bigger')
       assert_lt('a', 'b')
       assert_lt(99, 100)
    
       # Failing
       assert_lt('z', 'x')
       assert_lt(-5, -5)

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_true:

.. rst-class:: classref-method

|void| **assert_true**\ (\ got, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_true>`

asserts that got is `true`.  Does not assert truthiness, only boolean values will pass.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_false:

.. rst-class:: classref-method

|void| **assert_false**\ (\ got, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_false>`

Asserts that got is false.  Does not assert truthiness, only boolean values will pass.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_between:

.. rst-class:: classref-method

|void| **assert_between**\ (\ got, expect_low, expect_high, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_between>`

Asserts value is between (inclusive) the two expected values.

got >= expect_low and <= expect_high

::

       # Passing
       assert_between(5, 0, 10, 'Five should be between 0 and 10')
       assert_between(10, 0, 10)
       assert_between(0, 0, 10)
       assert_between(2.25, 2, 4.0)
    
       # Failing
       assert_between('a', 'b', 'c')
       assert_between(1, 5, 10)

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_not_between:

.. rst-class:: classref-method

|void| **assert_not_between**\ (\ got, expect_low, expect_high, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_not_between>`

Asserts value is not between (exclusive) the two expected values.

asserts that got <= expect_low or got >=  expect_high. # Passing assert_not_between(1, 5, 10) assert_not_between('a', 'b', 'd') assert_not_between('d', 'b', 'd') assert_not_between(10, 0, 10) assert_not_between(-2, -2, 10)  # Failing assert_not_between(5, 0, 10, 'Five shouldnt be between 0 and 10') assert_not_between(0.25, -2.0, 4.0)

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_has:

.. rst-class:: classref-method

|void| **assert_has**\ (\ obj, element, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_has>`

Uses the 'has' method of the object passed in to determine if it contains the passed in element.

::

       var an_array = [1, 2, 3, 'four', 'five']
       var a_hash = { 'one':1, 'two':2, '3':'three'}
    
       # Passing
       assert_has(an_array, 'four') # PASS
       assert_has(an_array, 2) # PASS
       # the hash's has method checks indexes not values
       assert_has(a_hash, 'one') # PASS
       assert_has(a_hash, '3') # PASS
    
       # Failing
       assert_has(an_array, 5) # FAIL
       assert_has(an_array, self) # FAIL
       assert_has(a_hash, 3) # FAIL
       assert_has(a_hash, 'three') # FAIL

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_does_not_have:

.. rst-class:: classref-method

|void| **assert_does_not_have**\ (\ obj, element, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_does_not_have>`

The inverse of assert_has.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_get_call_parameters:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **get_call_parameters**\ (\ object, method_name_or_index = -1, idx = -1\ ) :ref:`🔗<class_GutTest_method_get_call_parameters>`

Get the parameters for a method call to a doubled object.  By default it will return the most recent call.  You can optionally specify an index for which call you want to get the parameters for.  Can be called using a Callable for the first parameter instead of specifying an object and method name.  When you do this, the seoncd parameter is used as the index.  Returns: \* an array of parameter values if a call the method was found \* null when a call to the method was not found or the index specified was invalid.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_get_call_count:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **get_call_count**\ (\ object, method_name = null, parameters = null\ ) :ref:`🔗<class_GutTest_method_get_call_count>`

Returns the call count for a method with optional paramter matching.  Can be called with a Callable instead of an object, method_name, and parameters.  Bound arguments will be used to match call arguments.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_string_contains:

.. rst-class:: classref-method

|void| **assert_string_contains**\ (\ text, search, match_case = true\ ) :ref:`🔗<class_GutTest_method_assert_string_contains>`

Assert that `text` contains `search`.  Can perform case insensitive search by passing false for `match_case`.

::

       # Passing
       assert_string_contains('abc 123', 'a')
       assert_string_contains('abc 123', 'BC', false)
       assert_string_contains('abc 123', '3')
    
       # Failing
       assert_string_contains('abc 123', 'A')
       assert_string_contains('abc 123', 'BC')
       assert_string_contains('abc 123', '012')

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_called:

.. rst-class:: classref-method

|void| **assert_called**\ (\ inst, method_name = null, parameters = null\ ) :ref:`🔗<class_GutTest_method_assert_called>`

Assert that a method was called on an instance of a doubled class.  If parameters are supplied then the params passed in when called must match.  Can be called with a Callabe instead of specifying the object, method_name, and parameters.  The Callable's object must be a double.  Bound arguments will be used to match calls based on values passed to the method. 



\ **Examples**\ 

::

       assert_called(my_double, 'foo', [1, 2, 3])
       assert_called(my_double.foo.bind(1, 2, 3))

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_not_called:

.. rst-class:: classref-method

|void| **assert_not_called**\ (\ inst, method_name = null, parameters = null\ ) :ref:`🔗<class_GutTest_method_assert_not_called>`

Assert that a method was not called on an instance of a doubled class.  If parameters are specified then this will only fail if it finds a call that was sent matching parameters.  Can be called with a Callabe instead of specifying the object, method_name, and parameters.  The Callable's object must be a double.  Bound arguments will be used to match calls based on values passed to the method. 



\ **Examples**\ 

::

       assert_not_called(my_double, 'foo', [1, 2, 3])
       assert_not_called(my_double.foo.bind(1, 2, 3))

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_called_count:

.. rst-class:: classref-method

|void| **assert_called_count**\ (\ callable\: `Callable <https://docs.godotengine.org/en/stable/classes/class_callable.html>`_, expected_count\: `int <https://docs.godotengine.org/en/stable/classes/class_int.html>`_\ ) :ref:`🔗<class_GutTest_method_assert_called_count>`

Asserts the the method of a double was called an expected number of times. If any arguments are bound to the callable then only calls with matching arguments will be counted.  



\ **Examples**\ 

::

       # assert foo was called on my_double 5 times
       assert_called_count(my_double.foo, 5)
       # assert foo, with parameters [1,2,3], was called on my_double 4 times.
       assert_called_count(my_double.foo.bind(1, 2, 3), 4)

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_null:

.. rst-class:: classref-method

|void| **assert_null**\ (\ got, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_null>`

Asserts the passed in value is null

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_not_null:

.. rst-class:: classref-method

|void| **assert_not_null**\ (\ got, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_not_null>`

Asserts the passed in value is not null.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_pending:

.. rst-class:: classref-method

|void| **pending**\ (\ text = ""\ ) :ref:`🔗<class_GutTest_method_pending>`

Mark the current test as pending.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_wait_seconds:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **wait_seconds**\ (\ time, msg = ""\ ) :ref:`🔗<class_GutTest_method_wait_seconds>`

Use with await to wait an amount of time in seconds.  The optional message will be printed when the await starts.

See `Awaiting <../Awaiting.html>`__

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_wait_for_signal:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **wait_for_signal**\ (\ sig\: `Signal <https://docs.godotengine.org/en/stable/classes/class_signal.html>`_, max_wait, msg = ""\ ) :ref:`🔗<class_GutTest_method_wait_for_signal>`

Use with await to wait for a signal to be emitted or a maximum amount of time.  Returns true if the signal was emitted, false if not.

See `Awaiting <../Awaiting.html>`__

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_wait_frames:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **wait_frames**\ (\ frames, msg = ""\ ) :ref:`🔗<class_GutTest_method_wait_frames>`

Use with await to wait a number of frames.  The optional message will be printed

See `Awaiting <../Awaiting.html>`__

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_wait_until:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **wait_until**\ (\ callable, max_wait, p3 = "", p4 = ""\ ) :ref:`🔗<class_GutTest_method_wait_until>`

Use with await to wait for the passed in callable to return true or a maximum amount of time.  The callable is called every _physics_process tick unless an optional time between calls is specified.

p3 can be the optional message or an amount of time to wait between tests. p4 is the optional message if you have specified an amount of time to wait between tests.

Returns true if the callable returned true before the timeout, false if not. 

See `Awaiting <../Awaiting.html>`__

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_did_wait_timeout:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **did_wait_timeout**\ (\ ) :ref:`🔗<class_GutTest_method_did_wait_timeout>`

Returns whether the last wait\_\* method timed out.  This is always true if the last method was wait_frames or wait_seconds.  It will be false when using wait_for_signal and wait_until if the timeout occurs before what is being waited on.  The wait\_\* methods return this value so you should be able to avoid calling this directly, but you can.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_get_summary:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **get_summary**\ (\ ) :ref:`🔗<class_GutTest_method_get_summary>`

**Internal use only.**

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_clear_signal_watcher:

.. rst-class:: classref-method

|void| **clear_signal_watcher**\ (\ ) :ref:`🔗<class_GutTest_method_clear_signal_watcher>`

**Internal use only.**

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_get_summary_text:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **get_summary_text**\ (\ ) :ref:`🔗<class_GutTest_method_get_summary_text>`

**Internal use only.**

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_double_singleton:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **double_singleton**\ (\ singleton_name\ ) :ref:`🔗<class_GutTest_method_double_singleton>`

**Internal use only.**

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_partial_double_singleton:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **partial_double_singleton**\ (\ singleton_name\ ) :ref:`🔗<class_GutTest_method_partial_double_singleton>`

**Internal use only.**

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_stub:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **stub**\ (\ thing, p2 = null, p3 = null\ ) :ref:`🔗<class_GutTest_method_stub>`

Stub something.  Parameters 1: A callable OR the thing to stub OR a file path OR an instance OR a Script 2: either an inner class subpath or the method name 3: the method name if an inner class subpath was specified NOTE:  right now we cannot stub inner classes at the path level so this should only be called with two parameters.  I did the work though so I'm going to leave it but not update the wiki.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_simulate:

.. rst-class:: classref-method

|void| **simulate**\ (\ obj, times, delta, check_is_processing\: `bool <https://docs.godotengine.org/en/stable/classes/class_bool.html>`_ = false\ ) :ref:`🔗<class_GutTest_method_simulate>`

Simulate a number of frames by calling '_process' and '_physics_process' (if the methods exist) on an object and all of its descendents. The specified frame time, 'delta', will be passed to each simulated call.  NOTE: Objects can disable their processing methods using 'set_process(false)' and 'set_physics_process(false)'. This is reflected in the 'Object' methods 'is_processing()' and 'is_physics_processing()', respectively. To make 'simulate' respect this status, for example if you are testing an object which toggles processing, pass 'check_is_processing' as 'true'.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_use_parameters:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **use_parameters**\ (\ params\ ) :ref:`🔗<class_GutTest_method_use_parameters>`

Use this as the default value for the first parameter to a test to create a parameterized test.  See also the ParameterFactory and Parameterized Tests. 



\ **Example**\ 

::

       func test_with_parameters(p = use_parameters([1, 2, 3])):

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_run_x_times:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **run_x_times**\ (\ x\ ) :ref:`🔗<class_GutTest_method_run_x_times>`

**Internal use only.** When used as the default for a test method parameter, it will cause the test to be run x times.  I Hacked this together to test a method that was occassionally failing due to timing issues.  I don't think it's a great idea, but you be the judge.  If you find a good use for it, let me know and I'll make it a legit member of the api.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_autofree:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **autofree**\ (\ thing\ ) :ref:`🔗<class_GutTest_method_autofree>`

Marks whatever is passed in to be freed after the test finishes.  It also returns what is passed in so you can save a line of code. var thing = autofree(Thing.new())

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_autoqfree:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **autoqfree**\ (\ thing\ ) :ref:`🔗<class_GutTest_method_autoqfree>`

Works the same as autofree except queue_free will be called on the object instead.  This also imparts a brief pause after the test finishes so that the queued object has time to free.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_add_child_autofree:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **add_child_autofree**\ (\ node, legible_unique_name = false\ ) :ref:`🔗<class_GutTest_method_add_child_autofree>`

The same as autofree but it also adds the object as a child of the test.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_add_child_autoqfree:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **add_child_autoqfree**\ (\ node, legible_unique_name = false\ ) :ref:`🔗<class_GutTest_method_add_child_autoqfree>`

The same as autoqfree but it also adds the object as a child of the test.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_is_passing:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **is_passing**\ (\ ) :ref:`🔗<class_GutTest_method_is_passing>`

Returns true if the test is passing as of the time of this call.  False if not.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_is_failing:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **is_failing**\ (\ ) :ref:`🔗<class_GutTest_method_is_failing>`

Returns true if the test is failing as of the time of this call.  False if not.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_pass_test:

.. rst-class:: classref-method

|void| **pass_test**\ (\ text\ ) :ref:`🔗<class_GutTest_method_pass_test>`

Marks the test as passing.  Does not override any failing asserts or calls to fail_test.  Same as a passing assert.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_fail_test:

.. rst-class:: classref-method

|void| **fail_test**\ (\ text\ ) :ref:`🔗<class_GutTest_method_fail_test>`

Marks the test as failing.  Same as a failing assert.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_compare_deep:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **compare_deep**\ (\ v1, v2, max_differences = null\ ) :ref:`🔗<class_GutTest_method_compare_deep>`

Peforms a deep compare on both values, a CompareResult instnace is returned. The optional max_differences paramter sets the max_differences to be displayed.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_eq_deep:

.. rst-class:: classref-method

|void| **assert_eq_deep**\ (\ v1, v2\ ) :ref:`🔗<class_GutTest_method_assert_eq_deep>`

Performs a deep compare and asserts the  values are equal

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_ne_deep:

.. rst-class:: classref-method

|void| **assert_ne_deep**\ (\ v1, v2\ ) :ref:`🔗<class_GutTest_method_assert_ne_deep>`

Performs a deep compare and asserts the values are not equal

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_same:

.. rst-class:: classref-method

|void| **assert_same**\ (\ v1, v2, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_same>`

Assert v1 and v2 are the same using `is_same`.  See @GlobalScope.is_same.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_assert_not_same:

.. rst-class:: classref-method

|void| **assert_not_same**\ (\ v1, v2, text = ""\ ) :ref:`🔗<class_GutTest_method_assert_not_same>`

Assert using v1 and v2 are not the same using `is_same`.  See @GlobalScope.is_same.

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_skip_if_godot_version_lt:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **skip_if_godot_version_lt**\ (\ expected\ ) :ref:`🔗<class_GutTest_method_skip_if_godot_version_lt>`

Checks the passed in version string (x.x.x) against the engine version to see if the engine version is less than the expected version.  If it is then the test is mareked as passed (for a lack of anything better to do).  The result of the check is returned. 



\ **Example**\ 

::

       if(skip_if_godot_version_lt('3.5.0')):
           return

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_skip_if_godot_version_ne:

.. rst-class:: classref-method

`Variant <https://docs.godotengine.org/en/stable/classes/class_variant.html>`_ **skip_if_godot_version_ne**\ (\ expected\ ) :ref:`🔗<class_GutTest_method_skip_if_godot_version_ne>`

Checks if the passed in version matches the engine version.  The passed in version can contain just the major, major.minor or major.minor.path.  If the version is not the same then the test is marked as passed.  The result of the check is returned. 



\ **Example**\ 

::

        if(skip_if_godot_version_ne('3.4')):
           return

.. rst-class:: classref-item-separator

----

.. _class_GutTest_method_register_inner_classes:

.. rst-class:: classref-method

|void| **register_inner_classes**\ (\ base_script\ ) :ref:`🔗<class_GutTest_method_register_inner_classes>`

Registers all the inner classes in a script with the doubler.  This is required before you can double any inner class.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
